<?xml version="1.0" encoding="utf-8"?>
<!--
    Lita: A free and open source SQLite database administration tool for Windows, MacOSX and Linux.
    Copyright (C) 2010  David Deraedt

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="438" height="258" title="Create New DB"
	showCloseButton="true"
	close=" PopUpManager.removePopUp(this)">

	<mx:Script>
		<![CDATA[
			import com.dehats.air.sqlite.SimpleEncryptionKeyGenerator;
			import mx.controls.Alert;
			import com.dehats.sqla.model.presentation.MainPM;
			import mx.managers.PopUpManager;

			[Bindable]
			public var pm:MainPM;
			
			[Bindable]
			private var filePath:String;

			private var pwd:String="";

			
			private function browse():void
			{
				var f:File = new File();
				f.addEventListener(Event.SELECT, onFileSelected);
				f.browseForSave("Create a DB file");				
			}
			
			private function onFileSelected(pEvt:Event):void
			{
				var f:File = pEvt.target as File;
				filePath = f.nativePath;
			}
			
			private function submit():void
			{
				var testGen:SimpleEncryptionKeyGenerator = new SimpleEncryptionKeyGenerator();
				
				if(pwd=="")
				{
					pm.createDBFile( new File(filePath), pwd);
					PopUpManager.removePopUp(this);					
				}
				
				else if(testGen.validateStrongPassword(pwd))
				{
					pm.createDBFile( new File(filePath), pwd);
					PopUpManager.removePopUp(this);					
				}
				else
				{
					Alert.show( SimpleEncryptionKeyGenerator.PASSWORD_WARNING, "Incorrect password form");
				}
			}

			
		]]>
	</mx:Script>

	<mx:Label x="55" y="17" text="Database File"/>
	<mx:TextInput id="pathTi" y="15"
		text="{ filePath}" 
		change=" filePath = pathTi.text"  left="133" right="88"/>
	
	<mx:Button y="15" label="Browse" 
		click=" browse()" right="10"/>
		
	<mx:Label x="10" y="53" text="Password (Optional)*"/>
	<mx:TextInput id="pwdTi" 
		enter=" submit()"
		displayAsPassword="true"
		y="51"
		change=" pwd = pwdTi.text" left="133" right="10"/>

	<mx:Text left="10" y="79" right="10"
		text="*Use this password to open the database in Lita. {SimpleEncryptionKeyGenerator.PASSWORD_WARNING + '\n'}An encryption key will be created using the SimpleEncryptionKeyGenerator class. To open your database in your code, use your password with the SimpleEncryptionKeyGenerator class, or use the encryption key directly." 
		height="92"/>
	
	<mx:ControlBar horizontalAlign="center">
		<mx:Button label="Create"  
			enabled="{ pathTi.text.length>0}"
			click=" submit()" styleName="WhiteButton"/>
	</mx:ControlBar>
	
</mx:TitleWindow>
